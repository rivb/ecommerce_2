{"version":3,"sources":["../es/index.js"],"names":["axios","require","axiosRetry","CryptoJS","retries","FlowApi","apiKey","secretKey","apiURL","service","params","method","resolve","reject","toUpperCase","url","data","getPack","sign","response","httpGet","httpPost","code","info","http_code","body","output","includes","Error","message","keys","map","key","sort","a","b","push","encodeURIComponent","join","toSign","HmacSHA256","get","then","status","catch","error","post","FlowStatus","PENDING_PAYMENT","PAIED","REJECTED","CANCELED","PaymentMethod","WEBPAY","SERVIPAG","MULTICAJA","ONEPAY","CRYPOMONEDA","TODOS_LOS_MEDIOS"],"mappings":"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","file":"index.js","sourcesContent":["const axios = require(\"axios\");\nconst axiosRetry = require(\"axios-retry\");\nconst CryptoJS = require(\"crypto-js\");\n\naxiosRetry(axios, { retries: 3 });\n\nexport default class FlowApi {\n  constructor({ apiKey, secretKey, apiURL }) {\n    this.apiKey = apiKey;\n    this.secretKey = secretKey;\n    this.apiURL = apiURL;\n  }\n  send(service, params, method = \"GET\") {\n    return new Promise(async (resolve, reject) => {\n      method = method.toUpperCase();\n      let url = `${this.apiURL}/${service}`;\n      params = {\n        apiKey: this.apiKey,\n        ...params\n      };\n      let data = this.getPack(params, method);\n      let sign = this.sign(params);\n      let response;\n      if (method == \"GET\") {\n        response = await this.httpGet(url, data, sign);\n      } else {\n        response = await this.httpPost(url, data, sign);\n      }\n\n      if (!!response[\"info\"]) {\n        let code = response.info.http_code;\n        let body = response.output;\n        if (code === 200) {\n          resolve(body);\n        } else if ([400, 401].includes(code)) {\n          reject(Error(body.message));\n        } else {\n          reject(Error(\"Unexpected error occurred. HTTP_CODE: \" + code));\n        }\n      } else {\n        reject(Error(\"Unexpected error occurred.\"));\n      }\n    });\n  }\n  getPack(params, method) {\n    const keys = Object.keys(params)\n      .map(key => key)\n      .sort((a, b) => {\n        if (a > b) return 1;\n        else if (a < b) return -1;\n        return 0;\n      });\n    let data = [];\n    keys.map(key => {\n      if (method == \"GET\") {\n        data.push(\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key])\n        );\n      } else {\n        data.push(key + \"=\" + params[key]);\n      }\n    });\n    return data.join(\"&\");\n  }\n  sign(params) {\n    const keys = Object.keys(params)\n      .map(key => key)\n      .sort((a, b) => {\n        if (a > b) return 1;\n        else if (a < b) return -1;\n        return 0;\n      });\n    let toSign = [];\n    keys.map(key => {\n      toSign.push(key + \"=\" + params[key]);\n    });\n    toSign = toSign.join(\"&\");\n\n    return CryptoJS.HmacSHA256(toSign, this.secretKey);\n  }\n  httpGet(url, data, sign) {\n    url = url + \"?\" + data + \"&s=\" + sign;\n\n    return axios\n      .get(url)\n      .then(response => {\n        return {\n          output: response.data,\n          info: {\n            http_code: response.status\n          }\n        };\n      })\n      .catch(error => {\n        return {\n          output: error.response.data,\n          info: {\n            http_code: error.response.status\n          }\n        };\n      });\n  }\n  httpPost(url, data, sign) {\n    return axios\n      .post(url, `${data}&s=${sign}`)\n      .then(response => {\n        return {\n          output: response.data,\n          info: {\n            http_code: response.status\n          }\n        };\n      })\n      .catch(error => {\n        return {\n          output: error.response.data,\n          info: {\n            http_code: error.response.status\n          }\n        };\n      });\n  }\n}\nexport const FlowStatus = {\n  PENDING_PAYMENT: 1,\n  PAIED: 2,\n  REJECTED: 3,\n  CANCELED: 4\n};\nexport const PaymentMethod = {\n  WEBPAY: 1,\n  SERVIPAG: 2,\n  MULTICAJA: 3,\n  ONEPAY: 4,\n  CRYPOMONEDA: 5,\n  TODOS_LOS_MEDIOS: 9\n};\n"]}